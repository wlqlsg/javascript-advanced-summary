核心语言：ECMAScript
宿主对象：BOM DOM
JavaScript语言特点：
  直译式脚本语言
    在宿主（浏览器、Node）中解释执行
    非编译语言，不是在执行前提前编译可执行文件或字节码
  弱类型、动态类型语言
    写程序时不用给变量指定特定的数据类型（动态类型）
    可以动态的更改变量的类型（弱类型）
  ES5没有块作用域
  基于原型链的继承方式

基本数据类型（Number、String、Boolean、Null、Undefined）
引用数据类型（Object（Array、Function、Date等））
typeof 操作符
  返回一个字符串，表示未经计算的操作数的类型。
JavaScript 中的变量没有类型
JavaScript 中的数据值有类型
变量可以随时持有任何类型的值
栈内存
  存储的值大小固定
  由系统自动分配内存空间
  空间小，运行效率高
堆内存
  存储的值大小不定，可动态调整
  由程序员通过代码进行分配
  空间大，运行效率相对较低
基本类型的变量是存放在栈区的
  基本类型的值是不可变的
引用类型的值是同时保存在栈内存和堆内存中的对象
  引用类型的值可变
基本类型与引用类型的区别
  访问机制不同
  复制变量不同
  比较变量不同
  参数传递不同
基本类型的值直接访问
引用类型的值通过引用访问，不能直接访问
基本数据类型与引用类型的比较
  值类型是判断变量的值是否相等（值比较）
  引用类型是判断所指向的内存空间（地址）是否相同（引用比较）
类型转换 —— 将值从一种类型转换为另一种类型
  隐式类型转换：通常是某些操作的副作用，不易看出
  显示类型转换：可以在代码中明显看出
NaN(Not a Number)
  表示一个没有意义、不正确的数值
  与自身不相等


































