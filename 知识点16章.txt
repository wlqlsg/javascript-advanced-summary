Web 使用一种名为 HTTP（HyperText Transfer Protocol，超文本传输协议）的协议作为规范，完成从客户端到服务器端等一系列运作流程。而协议是指规则的约定。可以说，Web 是建立在 HTTP 协议上通信的。
HTTP 是一种不保存状态，即无状态（stateless）协议。HTTP 协议自身不对请求和响应之间的通信状态进行保存。也就是说在 HTTP 这个级别，协议对于发送过的请求或响应都不做持久化处理。
请求报文是由请求方法、请求 URI、协议版本、可选的请求首部字段和内容实体构成的。
响应报文基本上由协议版本、状态码（表示请求成功或失败的数字代码）、用以解释状态码的原因短语、可选的响应首部字段以及实体主体构成。
GET ：获取资源
POST：传输实体主体
HTTP 状态码负责表示客户端 HTTP 请求的返回结果、标记服务器端的处理是否正常、通知出现的错误等工作。
HTML <form> 元素表示了文档中的一个区域，此区域包含有交互控制元件，用来向 Web 服务器提交信息。
 action    ——  一个处理此表单信息的程序所在的 URL
 method  ——  浏览器使用这种 HTTP 方式来提交表单
 enctype ——  将表单的内容提交给服务器的 MIME 类型
enctype
 当 method 属性值为 get时, enctype 的取值为:
 application/x-www-form-urlencoded: 未指定属性时的默认值
 当 method 属性值为 post 时, enctype 可能的取值有:
 application/x-www-form-urlencoded: 未指定属性时的默认值
 multipart/form-data: 用于一个 type 属性设置为 "file" 的 <input> 元素
 text/plain (HTML5)
Ajax
 Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新
 Ajax 技术与数据格式无关
AJAX 技术使开发者能够专注于互联网中数据的传输。
 但是 AJAX 技术并不是一把万能钥匙，互联网中的数据隐私和数据安全（例如你的银行账号和密码）也非常重要，为了保护某些用户数据的隐私与安全，浏览器使用“同源策略”限制了 AJAX 技术获取数据的范围和能力。  
 但在一些合理的场景中，我们又不得不想办法绕过同源策略，实现跨域请求资源。
同源策略（Same origin policy）是一种约定，它是浏览器最核心也是最基本的功能。
 同源策略是指：限制不同源之间执行特定操作  
 同源：是指域名、协议、端口都相同
只要协议、域名、端口有任何一个不同，则都被当作不同的域，不同的源
